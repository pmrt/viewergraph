//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var TrackedChannels = newTrackedChannelsTable("public", "tracked_channels", "")

type trackedChannelsTable struct {
	postgres.Table

	//Columns
	BroadcasterID          postgres.ColumnString
	BroadcasterDisplayName postgres.ColumnString
	BroadcasterUsername    postgres.ColumnString
	BroadcasterType        postgres.ColumnString
	ProfileImageURL        postgres.ColumnString
	OfflineImageURL        postgres.ColumnString
	TrackedSince           postgres.ColumnTimestamp

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type TrackedChannelsTable struct {
	trackedChannelsTable

	EXCLUDED trackedChannelsTable
}

// AS creates new TrackedChannelsTable with assigned alias
func (a TrackedChannelsTable) AS(alias string) *TrackedChannelsTable {
	return newTrackedChannelsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new TrackedChannelsTable with assigned schema name
func (a TrackedChannelsTable) FromSchema(schemaName string) *TrackedChannelsTable {
	return newTrackedChannelsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new TrackedChannelsTable with assigned table prefix
func (a TrackedChannelsTable) WithPrefix(prefix string) *TrackedChannelsTable {
	return newTrackedChannelsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new TrackedChannelsTable with assigned table suffix
func (a TrackedChannelsTable) WithSuffix(suffix string) *TrackedChannelsTable {
	return newTrackedChannelsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newTrackedChannelsTable(schemaName, tableName, alias string) *TrackedChannelsTable {
	return &TrackedChannelsTable{
		trackedChannelsTable: newTrackedChannelsTableImpl(schemaName, tableName, alias),
		EXCLUDED:             newTrackedChannelsTableImpl("", "excluded", ""),
	}
}

func newTrackedChannelsTableImpl(schemaName, tableName, alias string) trackedChannelsTable {
	var (
		BroadcasterIDColumn          = postgres.StringColumn("broadcaster_id")
		BroadcasterDisplayNameColumn = postgres.StringColumn("broadcaster_display_name")
		BroadcasterUsernameColumn    = postgres.StringColumn("broadcaster_username")
		BroadcasterTypeColumn        = postgres.StringColumn("broadcaster_type")
		ProfileImageURLColumn        = postgres.StringColumn("profile_image_url")
		OfflineImageURLColumn        = postgres.StringColumn("offline_image_url")
		TrackedSinceColumn           = postgres.TimestampColumn("tracked_since")
		allColumns                   = postgres.ColumnList{BroadcasterIDColumn, BroadcasterDisplayNameColumn, BroadcasterUsernameColumn, BroadcasterTypeColumn, ProfileImageURLColumn, OfflineImageURLColumn, TrackedSinceColumn}
		mutableColumns               = postgres.ColumnList{BroadcasterDisplayNameColumn, BroadcasterUsernameColumn, BroadcasterTypeColumn, ProfileImageURLColumn, OfflineImageURLColumn, TrackedSinceColumn}
	)

	return trackedChannelsTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		BroadcasterID:          BroadcasterIDColumn,
		BroadcasterDisplayName: BroadcasterDisplayNameColumn,
		BroadcasterUsername:    BroadcasterUsernameColumn,
		BroadcasterType:        BroadcasterTypeColumn,
		ProfileImageURL:        ProfileImageURLColumn,
		OfflineImageURL:        OfflineImageURLColumn,
		TrackedSince:           TrackedSinceColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
